# Generated by Django 4.2.16 on 2025-06-10 04:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClassType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('duration_minutes', models.PositiveIntegerField()),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=20)),
                ('calories_burn_estimate', models.PositiveIntegerField(help_text='Estimated calories burned')),
                ('equipment_needed', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
                ('medical_conditions', models.TextField(blank=True)),
                ('fitness_goals', models.JSONField(default=list)),
                ('preferred_timezone', models.CharField(default='Asia/Kolkata', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('total_bookings', models.PositiveIntegerField(default=0)),
                ('membership_tier', models.CharField(default='basic', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('specializations', models.JSONField(default=list, help_text='List of specializations')),
                ('bio', models.TextField(blank=True)),
                ('experience_years', models.PositiveIntegerField(default=0)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FitnessClass',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField()),
                ('max_capacity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('current_bookings', models.PositiveIntegerField(default=0)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('location', models.CharField(default='Studio 1', max_length=100)),
                ('special_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='bookings.classtype')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='bookings.instructor')),
            ],
            options={
                'ordering': ['datetime'],
                'unique_together': {('instructor', 'datetime')},
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('waitlisted', 'Waitlisted'), ('cancelled', 'Cancelled'), ('completed', 'Completed'), ('no_show', 'No Show')], default='confirmed', max_length=20)),
                ('booking_datetime', models.DateTimeField(auto_now_add=True)),
                ('special_requests', models.TextField(blank=True)),
                ('payment_status', models.CharField(default='pending', max_length=20)),
                ('booking_reference', models.CharField(max_length=20, unique=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('feedback_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('feedback_comment', models.TextField(blank=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='bookings.client')),
                ('fitness_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='bookings.fitnessclass')),
            ],
            options={
                'ordering': ['-booking_datetime'],
                'unique_together': {('fitness_class', 'client')},
            },
        ),
    ]
